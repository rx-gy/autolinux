# 1. Choose language
# ==================
d-i debian-installer/locale string en_AU.UTF-8

# 2. Configure the keyboard
# =========================

d-i keyboard-configuration/xkb-keymap select us

# 3. Detect and mount CD-ROM
# ==========================
d-i cdrom-detect/load_media boolean false

# 4. Load installer components from CD
# ====================================

# 5. Detect network hardware
# ==========================
d-i hw-detect/load_media boolean false
d-i hw-detect/load_firmware boolean false

# 6. Configure the network
# ========================
d-i netcfg/get_domain string shadowrealm.home.arpa
# d-i netcfg/get_hostname string mercury
d-i netcfg/use_autoconfig boolean true

d-i netcfg/link_wait_timeout string 10
d-i netcfg/dhcp_timeout string 60
d-i netcfg/dhcpv6_timeout string 60
d-i netcfg/choose_interface select auto

# Disable that annoying WEP key dialog.
d-i netcfg/wireless_wep string

# 7. Setup users and passwords
# ============================
# Skip creation of a root account (normal user account will be able to
# use sudo).
d-i passwd/root-login boolean false

# To create a normal user account.
d-i passwd/user-fullname string Debian User
d-i passwd/username string debian

# Normal user's password, either in clear text
d-i passwd/user-password password pleasechangethispassword-12345!@#$%
d-i passwd/user-password-again password pleasechangethispassword-12345!@#$%

# 8. Configure the clock
# ======================
d-i clock-setup/ntp boolean true
d-i clock-setup/ntp-server string pool.ntp.org

d-i time/zone string Australia/Sydney
tzsetup-udeb time/zone select Australia/Canberra
tzsetup-udeb tzsetup/country/AU select Australia/Canberra

# 9. Detect disks
# ===============

# 10. Partition disks
# ===================
d-i partman-auto/disk string /dev/nvme0n1
d-i partman-auto/method string regular

# You can define the amount of space that will be used for the LVM volume
# group. It can either be a size with its unit (eg. 20 GB), a percentage of
# free space or the 'max' keyword.
d-i partman-auto-lvm/guided_size string max

# You can choose one of the three predefined partitioning recipes:
# - atomic: all files in one partition
# - home:   separate /home partition
# - multi:  separate /home, /usr, /var, and /tmp partitions
d-i partman-auto/choose_recipe select atomic

# If one of the disks that are going to be automatically partitioned
# contains an old LVM configuration, the user will normally receive a
# warning. This can be preseeded away...
d-i partman-lvm/device_remove_lvm boolean true
# The same applies to pre-existing software RAID array:
d-i partman-md/device_remove_md boolean true

# And the same goes for the confirmation to write the lvm partitions.
# This makes partman automatically partition without confirmation.
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

#NOTE: it may warn you before partitioning. This is a safety check and can be omitted if desired.

# 11. Install the base system
# ===========================
# Kernel to install:
# Choices: linux-image-6.7.12-amd64,linux-image-6.7.12-amd64-unsigned,linux-image-6.7.12-cloud-amd64,linux-image-6.7.12-cloud-amd64-unsigned,linux-image-6.7.12-rt-amd64,linux-image-6.7.12-rt-amd64-unsigned,linux-image-amd64,linux-image-amd64-signed-template,linux-image-cloud-amd64,linux-image-rt-amd64, none
bootstrap-base base-installer/kernel/image select linux-image-amd64

# Kernel to install:
# d-i base-installer/kernel/image string linux-image-amd64

# Drivers to include in the initrd:
# Choices: generic: include all available drivers, targeted: only include drivers needed for this system
bootstrap-base base-installer/initramfs-tools/driver-policy select most

# Tool to use to generate boot initrd:
# Choices: 
bootstrap-base base-installer/initramfs/generator select 
# for internal use; can be preseeded
base-installer base-installer/install-recommends boolean true
# d-i base-installer/install-recommends boolean true



# 12. Configure the package manager
# =================================
# Mirror protocol:
# If you select ftp, the mirror/country string does not need to be set.
# Default value for the mirror protocol: http.
#d-i mirror/protocol string ftp
d-i mirror/country string manual
d-i mirror/http/hostname string deb.debian.org
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string

d-i mirror/suite string unstable

apt-mirror-setup apt-setup/non-free boolean true
apt-mirror-setup apt-setup/non-free-firmware boolean true
d-i apt-setup/enable-source-repositories boolean true

# Services to use:
d-i apt-setup/services-select multiselect 
d-i apt-setup/disable-cdrom-entries boolean true

# 13. Select and install software
# ===============================
### Package selection
tasksel tasksel/first multiselect standard, ssh-server
pkgsel pkgsel/run_tasksel boolean true
pkgsel pkgsel/update-policy select unattended-upgrades
pkgsel pkgsel/updatedb boolean true
pkgsel pkgsel/upgrade select safe-upgrade
popularity-contest popularity-contest/participate boolean false
d-i popularity-contest/participate boolean false
d-i pkgsel/include string openssh-server ansible git build-essential sudo screen tmux vim

# 14. Install the GRUB boot loader on a hard disk
# ===============================================

# Install the GRUB boot loader to the master boot record?
d-i grub-installer/with_other_os boolean true
d-i grub-installer/only_debian boolean true
d-i grub-installer/grub2_instead_of_grub_legacy boolean true

# Device for boot loader installation:
# d-i grub-installer/bootdev string /dev/nvme0n1
# d-i grub-installer/choose_bootdev select /dev/nvme0n1

# Force GRUB installation to the EFI removable media path?
grub-installer grub-installer/force-efi-extra-removable boolean false

# 15. Finish the installation
# ===========================
d-i clock-setup/utc boolean true
d-i finish-install/reboot_in_progress note

#### Advanced options
### Running custom commands during the installation
# d-i preseeding is inherently not secure. Nothing in the installer checks
# for attempts at buffer overflows or other exploits of the values of a
# preconfiguration file like this one. Only use preconfiguration files from
# trusted locations! To drive that home, and because it's generally useful,
# here's a way to run any shell command you'd like inside the installer,
# automatically.

# This first command is run as early as possible, just after
# preseeding is read.
# d-i preseed/early_command string anna-install some-udeb
# This command is run immediately before the partitioner starts. It may be
# useful to apply dynamic partitioner preseeding that depends on the state
# of the disks (which may not be visible when preseed/early_command runs).
# d-i partman/early_command \
#       string debconf-set partman-auto/disk "$(list-devices disk | head -n1)"
# This command is run just before the install finishes, but when there is
# still a usable /target directory. You can chroot to /target and use it
# directly, or use the apt-install and in-target commands to easily install
# packages and run commands in the target system.
# d-i preseed/late_command string apt-install zsh; in-target chsh -s /bin/zsh
d-i preseed/late_command string cp ansible.service /target/etc/systemd/system/;\
mkdir -p /target/root/.local/;\
cp vault_pass /target/root/.local/;\
in-target systemctl enable systemd-networkd.service systemd-networkd-wait-online.service ansible.service
